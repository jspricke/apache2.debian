# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=779078
#
# https://bz.apache.org/bugzilla/show_bug.cgi?id=57268
#
# https://svn.apache.org/r1664365
#
# Fix mpm_event crashes due to various race conditions
#
#commit a72c0042ab79dc65af1c706ceec0a72296431d4c
#Author: Jim Jagielski <jim@apache.org>
#Date:   Thu Mar 5 14:54:19 2015 +0000
#
#    Merge r1663017 from trunk:
#    
#    mpm_event: follow up to r1538490, r1545736, r1604350, r1639614 and r1642868.
#    Clear and restore sbh in notify_suspend() and notify_resume() respectively.
#    
#    Submitted by: ylavic
#    Reviewed/backported by: jim
#    
#    
#    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x@1664365 13f79535-47bb-0310-9956-ffa450edef68
#
--- apache2.orig/server/mpm/event/event.c
+++ apache2/server/mpm/event/event.c
@@ -771,10 +771,12 @@ static void notify_suspend(event_conn_st
 {
     ap_run_suspend_connection(cs->c, cs->r);
     cs->suspended = 1;
+    cs->c->sbh = NULL;
 }
 
-static void notify_resume(event_conn_state_t *cs)
+static void notify_resume(event_conn_state_t *cs, ap_sb_handle_t *sbh)
 {
+    cs->c->sbh = sbh;
     cs->suspended = 0;
     ap_run_resume_connection(cs->c, cs->r);
 }
@@ -810,10 +812,12 @@ static int start_lingering_close_common(
         cs->pub.state = CONN_STATE_LINGER_NORMAL;
     }
     apr_atomic_inc32(&lingering_count);
-    cs->c->sbh = NULL;
     if (in_worker) { 
         notify_suspend(cs);
     }
+    else {
+        cs->c->sbh = NULL;
+    }
     apr_thread_mutex_lock(timeout_mutex);
     TO_QUEUE_APPEND(*q, cs);
     cs->pfd.reqevents = (
@@ -846,7 +850,6 @@ static int start_lingering_close_common(
 static int start_lingering_close_blocking(event_conn_state_t *cs)
 {
     if (ap_start_lingering_close(cs->c)) {
-        cs->c->sbh = NULL;
         notify_suspend(cs);
         ap_push_pool(worker_queue_info, cs->p);
         return 0;
@@ -910,7 +913,7 @@ static apr_status_t ptrans_pre_cleanup(v
     event_conn_state_t *cs = dummy;
 
     if (cs->suspended) {
-        notify_resume(cs);
+        notify_resume(cs, NULL);
     }
     return APR_SUCCESS;
 }
@@ -1009,8 +1012,7 @@ static void process_socket(apr_thread_t
     }
     else {
         c = cs->c;
-        c->sbh = sbh;
-        notify_resume(cs);
+        notify_resume(cs, sbh);
         c->current_thread = thd;
         /* Subsequent request on a conn, and thread number is part of ID */
         c->id = conn_id;
@@ -1103,7 +1105,6 @@ read_request:
          */
         cs->expiration_time = ap_server_conf->keep_alive_timeout +
                               apr_time_now();
-        c->sbh = NULL;
         notify_suspend(cs);
         apr_thread_mutex_lock(timeout_mutex);
         TO_QUEUE_APPEND(keepalive_q, cs);
@@ -1121,7 +1122,6 @@ read_request:
     }
     else if (cs->pub.state == CONN_STATE_SUSPENDED) {
         apr_atomic_inc32(&suspended_count);
-        c->sbh = NULL;
         notify_suspend(cs);
     }
 }
