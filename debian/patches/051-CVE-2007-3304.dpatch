#! /bin/sh /usr/share/dpatch/dpatch-run
## 051_CVE-2007-3304.dpatch
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: adapted from http://svn.apache.org/viewvc?view=rev&revision=556936

@DPATCH@
diff -urNad etch-apache2~/server/mpm/experimental/event/event.c etch-apache2/server/mpm/experimental/event/event.c
--- etch-apache2~/server/mpm/experimental/event/event.c	2006-07-24 03:34:58.000000000 +0200
+++ etch-apache2/server/mpm/experimental/event/event.c	2007-08-27 21:34:04.437175730 +0200
@@ -136,6 +136,8 @@
 #define MAX_THREAD_LIMIT 100000
 #endif
 
+apr_status_t ap_mpm_safe_kill(pid_t pid, int sig);
+
 /*
  * Actual definitions of config globals
  */
@@ -1998,12 +2000,10 @@
 
             active_children = 0;
             for (index = 0; index < ap_daemons_limit; ++index) {
-                if (MPM_CHILD_PID(index) != 0) {
-                    if (kill(MPM_CHILD_PID(index), 0) == 0) {
-                            active_children = 1;
-                            /* Having just one child is enough to stay around */
-                            break;
-                    }
+                if (ap_mpm_safe_kill(MPM_CHILD_PID(index), 0) == APR_SUCCESS) {
+                    active_children = 1;
+                    /* Having just one child is enough to stay around */
+                    break;
                 }
             }
         } while (!shutdown_pending && active_children &&
diff -urNad etch-apache2~/server/mpm/prefork/prefork.c etch-apache2/server/mpm/prefork/prefork.c
--- etch-apache2~/server/mpm/prefork/prefork.c	2006-07-12 05:38:44.000000000 +0200
+++ etch-apache2/server/mpm/prefork/prefork.c	2007-08-27 21:33:05.025462730 +0200
@@ -88,6 +88,8 @@
 #define HARD_THREAD_LIMIT 1
 #endif
 
+apr_status_t ap_mpm_safe_kill(pid_t pid, int sig);
+
 /* config globals */
 
 int ap_threads_per_child=0;         /* Worker threads per child */
@@ -1127,7 +1129,7 @@
         for (index = 0; index < ap_daemons_limit; ++index) {
             if (ap_scoreboard_image->servers[index][0].status != SERVER_DEAD) {
                 /* Ask each child to close its listeners. */
-                kill(MPM_CHILD_PID(index), AP_SIG_GRACEFUL);
+                ap_mpm_safe_kill(MPM_CHILD_PID(index), AP_SIG_GRACEFUL);
                 active_children++;
             }
         }
@@ -1165,12 +1167,10 @@
 
             active_children = 0;
             for (index = 0; index < ap_daemons_limit; ++index) {
-                if (MPM_CHILD_PID(index) != 0) {
-                    if (kill(MPM_CHILD_PID(index), 0) == 0) {
-                            active_children = 1;
-                            /* Having just one child is enough to stay around */
-                            break;
-                    }
+                if (ap_mpm_safe_kill(MPM_CHILD_PID(index), 0) == APR_SUCCESS) {
+                    active_children = 1;
+                    /* Having just one child is enough to stay around */
+                    break;
                 }
             }
         } while (!shutdown_pending && active_children &&
@@ -1222,7 +1222,7 @@
                  * piped loggers, etc. They almost certainly won't handle
                  * it gracefully.
                  */
-                kill(ap_scoreboard_image->parent[index].pid, AP_SIG_GRACEFUL);
+                ap_mpm_safe_kill(ap_scoreboard_image->parent[index].pid, AP_SIG_GRACEFUL);
             }
         }
     }
diff -urNad etch-apache2~/server/mpm/worker/worker.c etch-apache2/server/mpm/worker/worker.c
--- etch-apache2~/server/mpm/worker/worker.c	2006-07-24 03:43:24.000000000 +0200
+++ etch-apache2/server/mpm/worker/worker.c	2007-08-27 21:33:41.307730230 +0200
@@ -110,6 +110,8 @@
 #define MAX_THREAD_LIMIT 20000
 #endif
 
+apr_status_t ap_mpm_safe_kill(pid_t pid, int sig);
+
 /*
  * Actual definitions of config globals
  */
@@ -1813,12 +1815,10 @@
 
             active_children = 0;
             for (index = 0; index < ap_daemons_limit; ++index) {
-                if (MPM_CHILD_PID(index) != 0) {
-                    if (kill(MPM_CHILD_PID(index), 0) == 0) {
-                            active_children = 1;
-                            /* Having just one child is enough to stay around */
-                            break;
-                    }
+                if (ap_mpm_safe_kill(MPM_CHILD_PID(index), 0) == APR_SUCCESS) {
+                    active_children = 1;
+                    /* Having just one child is enough to stay around */
+                    break;
                 }
             }
         } while (!shutdown_pending && active_children &&
diff -urNad etch-apache2~/server/mpm_common.c etch-apache2/server/mpm_common.c
--- etch-apache2~/server/mpm_common.c	2006-07-12 05:38:44.000000000 +0200
+++ etch-apache2/server/mpm_common.c	2007-08-27 21:31:49.492742230 +0200
@@ -126,6 +126,11 @@
     apr_proc_t proc;
     apr_status_t waitret;
 
+    /* Ensure pid sanity. */
+    if (pid < 1) {
+        return 1;
+    }        
+
     proc.pid = pid;
     waitret = apr_proc_wait(&proc, NULL, NULL, APR_NOWAIT);
     if (waitret != APR_CHILD_NOTDONE) {
@@ -305,6 +310,35 @@
         cur_extra = next;
     }
 }
+
+/* Before sending the signal to the pid this function verifies that
+ * the pid is a member of the current process group; either using
+ * apr_proc_wait(), where waitpid() guarantees to fail for non-child
+ * processes; or by using getpgid() directly, if available. */
+apr_status_t ap_mpm_safe_kill(pid_t pid, int sig)
+{
+    pid_t pg;
+
+    /* Ensure pid sanity. */
+    if (pid < 1) {
+        return APR_EINVAL;
+    }
+
+    pg = getpgid(pid);    
+    if (pg == -1) {
+        /* Process already dead... */
+        return errno;
+    }
+
+    if (pg != getpgrp()) {
+        ap_log_error(APLOG_MARK, APLOG_ALERT, 0, ap_server_conf,
+                     "refusing to send signal %d to pid %ld outside "
+                     "process group", sig, (long)pid);
+        return APR_EINVAL;
+    }
+
+    return kill(pid, sig) ? errno : APR_SUCCESS;
+}
 #endif /* AP_MPM_WANT_RECLAIM_CHILD_PROCESSES */
 
 #ifdef AP_MPM_WANT_WAIT_OR_TIMEOUT
